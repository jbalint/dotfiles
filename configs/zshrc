
##############################################
# Get this over with right away so I can override everything it does
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
# Look in ~/.oh-my-zsh/themes/
ZSH_THEME="simple"
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"
# Uncomment this to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"
# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13
# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"
# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"
# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"
# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"
# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=()
source $ZSH/oh-my-zsh.sh
# requires colors from oh-my-zsh
export PROMPT='%{$fg[green]%}%~%{$fg_bold[blue]%}%% %{$reset_color%}'
unsetopt sharehistory

#export GREP_OPTIONS=--color=auto

#################################################3
# *MY* ZSH configuration
#
# http://www.network-science.de/ascii/
# style=banner


ulimit -c unlimited

# view images with `feh'
alias feh="feh -Z -."

#FANCY_IP=192.168.1.114
FANCY_IP=24.241.225.93
LAN_IF=wlp3s0
LAN_IP=$(ip addr show $LAN_IF | grep 'inet ' | perl -lpe's/.*inet\ (\d+\.\d+\.\d+\.\d+)\/.*/$1/')
LAN_GW_IP=$(ip route show | grep default | head -1 | gawk '{print $3}')
LAN_DNS=$(grep nameserver /etc/resolv.conf | head -n 1 | gawk '{print $2}')

export HOSTNAME=$(hostname)
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/bin/core_perl
export JAVA5_HOME=~/sw/jdk5
export JAVA6_HOME=~/sw/jdk6
export JAVA7_HOME=~/sw/jdk7
export JAVA8_HOME=~/sw/jdk8
export JAVA8_HOME=~/sw/jdk1.9.0-b80
#export LUA_HOME=~/sw/lua-5.2.2

#export MYSQL_HOME=~/sw/mysql-5.5.30-linux2.6-x86_64

#export OPCODEDIR=/usr/lib/csound/plugins
#export CSSTRNGS=/usr/share/locale
#export WINEPREFIX=/home/jbalint/wine_test1
#export WINEARCH=win32

export LD_LIBRARY_PATH=~/sw/yellow-tree:~/lib
export PKG_CONFIG_PATH=~/lib/pkgconfig

LESSOPEN="|lesspipe.sh %s"; export LESSOPEN

export LESS="-r -w -J"

if [ "$JAVA_HOME" = "" ] ; then
	export JAVA_HOME=$JAVA8_HOME
fi
for X ( \
	~/bin \
	~/.local/bin \
	~/.cabal/bin \
	$JAVA_HOME/bin ) ; do
	export PATH="$X:$PATH"
done

export EDITOR=vim
export LUA_PATH="/home/jbalint/sw/yellow-tree/?.lua;/home/jbalint/sw/lunit/lua/?.lua;/home/jbalint/share/lua/5.2/?.lua;/home/jbalint/share/lua/5.2/?/init.lua;/home/jbalint/lib/share/?.lua;;"
export LUA_CPATH="/home/jbalint/lib/lua/5.2/?.so;/home/jbalint/lib/lib/?.so;/home/jbalint/sw/banshee-sympatico/prototype-code/?.so"

alias vi=vim
alias rein=". ~/.zshrc"
alias java5="export JAVA_HOME=$JAVA5_HOME ; rein"
alias java6="export JAVA_HOME=$JAVA6_HOME ; rein"
alias java7="export JAVA_HOME=$JAVA7_HOME ; rein"
alias java8="export JAVA_HOME=$JAVA8_HOME ; rein"
alias java9="export JAVA_HOME=$JAVA9_HOME ; rein"
alias edrc="vi ~/.zshrc"
alias reset_inotify="echo 9999 | sudo tee /proc/sys/fs/inotify/max_user_watches"
alias dnsme="echo '#@VPNC_GENERATED@\nnameserver 127.0.0.1' | sudo tee /etc/resolv.conf"
alias dnsreset="echo 'nameserver 192.168.1.1' | sudo tee /etc/resolv.conf"
alias screenshot="sleep 3s; import -window root screenshot.png"

alias facebook="chromium facebook.com"
alias timidity="timidity -iA -R 1"

pts() {
	basename `readlink /proc/self/fd/0`
}

# Show the top-level dirs in an archive
dirs() {
	if [[ $1 =~ .tar.gz$ || $1 =~ .tgz$ ]] ; then
		gunzip -c "$1" | tar -tf - | sed 's/\/.*//' | uniq
	elif [[ $1 =~ .tar.bz2$ || $1 =~ .tbz$ ]] ; then
		bunzip2 -c "$1" | tar -tf - | sed 's/\/.*//' | uniq
	elif [[ $1 =~ .zip$ ]] ; then
		unzip -l $1 | \
			egrep -v '(^---|^Archive|(Length\s+Date\s+Time)|         )' | \
			perl -lpe's/\s+\d+\s+\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}\s+(.+?)\/.*$/$1/' | uniq
	else
		echo "Unknown archive type"
	fi
}

ptsproc() {
	ps auxw | grep pts/`pts`
}

xterm_title() {
	echo "\033]2;$1\007"
}

sS() {
	xterm_title "$1"
	screen -S "$1"
	xterm_title "urxvt"
}

sr() {
	xterm_title "$1"
	screen -rd "$1"
	xterm_title "urxvt"
}

alias sl='screen -list'

Ts() {
	tmux new-session -s "$1"
}

Tl() {
	tmux list-sessions
}

Tr() {
	tmux attach-session -t "$1"
}

tmux-list() {
	ss -f unix -lp | grep tmux
}

yt_pid() {
	#YT_PID=$(ps w | egrep "Xcheck.*lunit" | grep -v grep  | awk "{print \$1}")
	YT_PID=$(ps w | egrep "Xcheck.*yt" | egrep -v "grep|gdb"  | awk "{print \$1}")
	echo $YT_PID
}

yt_jstack() {
	YT_PID=$(yt_pid)
	if [ "$YT_PID" -ne "" ] ; then
		jstack $YT_PID
	else
		echo "None running"
	fi
}

yt_gstack() {
	YT_PID=$(yt_pid)
	if [ "$YT_PID" -ne "" ] ; then
		gstack $YT_PID
	else
		echo "None running"
	fi
}

gstack() {
	gdb -batch -ex "thread apply all bt full" -p $1
}

mouse_invert() {
	BTNS="1 2 3"
	if [ "$1" = "t" ] ; then
		BTNS="3 2 1"
	fi
	xmodmap -e "pointer = $BTNS"
}

touchpad_off() {
	/usr/bin/synclient TouchpadOff=1
}

touchpad_on() {
	/usr/bin/synclient TouchpadOff=0
}

####################################
####################################
##                                ##
## #     #                        ##
## #     # # #####  ######  ####  ##
## #     # # #    # #      #    # ##
## #     # # #    # #####  #    # ##
##  #   #  # #    # #      #    # ##
##   # #   # #    # #      #    # ##
##    #    # #####  ######  ####  ##
##                                ##
####################################
####################################

tvmon() {
	if [[ `xrandr | grep 'VGA1 connected 1080x1920' | wc -l` == 1 ]] ; then
		echo "switch to TV"
		xrandr --output VGA1 --off
		xrandr --output HDMI1 --auto --right-of DP2
		bspc desktop -f Kodi
		bspc desktop -f last
	else
		echo "switch to monitor"
		xrandr --output HDMI1 --off
		xrandr --output VGA1 --auto --right-of DP2 --rotate left
		bspc desktop -f jI
		bspc desktop -f last
	fi
}

tv_on() {
	xrandr --output HDMI1 --auto --mode 1366x768 --same-as HDMI2
}

tv_right() {
	xrandr --output HDMI1 --mode 1920x1080 --right-of HDMI2
}

tv_off() {
	xrandr --output HDMI1 --off
}

monitor_on() {
	#xrandr --output HDMI1 --auto --mode 1680x1050 --same-as LVDS1
	xrandr --output HDMI2 --auto --mode 1680x1050 --right-of LVDS1
	echo "Remember to invert mouse buttons"
}

monitor_off() {
	xrandr --output HDMI2 --off
}

laptop_on() {
	xrandr --output LVDS1 --auto --mode 1366x768
}

laptop_off() {
	xrandr --output LVDS1 --off
}

run-xbmc() {
	PULSE_SINK=alsa_output.pci-0000_00_1b.0.hdmi-stereo setsid kodi
}

################################################
# The following lines were added by compinstall

zstyle ':completion:*' completer _complete _ignored
zstyle :compinstall filename '/home/jbalint/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory autocd extendedglob nomatch
bindkey -v
# End of lines configured by zsh-newuser-install

# Prevent C-s and C-q from sending term codes
# Needed to use rtorrent
stty stop undef
stty start undef

# sometimes this module (the network card) prevents the computer from suspending
# sudo rmmod e1000e
# sudo systemctl suspend

aur_install() {
	cd ~/aur && \
	tar -zxvf ~/Downloads/$1.tar.gz && \
	cd $1 && \
	makepkg -s && \
	sudo pacman -U ${1}*.pkg.tar.xz
}

# from perlbrew when I was using it on the old `rook' setup
#source ~/perl5/perlbrew/etc/bashrc

# wmii-print-client - Print details about a client given a client id
# arguments:
#  -v (verbose)
#  client id
#  will read stdin if no client id is given
wmii-print-client() {
	local verbose
	if [[ $1 = -v ]] ; then
		verbose=1
		shift
	fi

	# futz around with client id if provided to use as input stream
	local clientId=$1
	local cmd="echo $clientId"
	if [[ $clientId = "" ]] ; then
		cmd="cat"
	fi

	local label
	bash -c "$cmd" | sed 's#/\+$##' | while read i ; do
		label="`wmiir read /client/$i/label`"
		if [[ $? != 0 ]] ; then
			echo "$i is not a valid client"
			continue
		fi
		local tags=`wmiir read /client/$i/tags`
		echo -e "${i%/} : $label \n\t$tags"
		if [[ $verbose = 1 ]] ; then
			local props="`wmiir read /client/$i/props`"
			echo -e "\tPROPS: $props"
			local ctl="`wmiir read /client/$i/ctl | tr '\n' ' '`"
			echo -e "\tCTL: $ctl"
		fi
	done
}

# Find the wmii ID for the label matching the given regex
wmii-id-for-label() {
	wmii-find $1 | head -n 1
}

# Find a wmii client by props (program:class:label)
wmii-find() {
	setopt localoptions
	setopt nocasematch
	local verbose
	# regex to match
	if [[ $1 = -v ]] ; then
		verbose=1
		shift
	fi
	local labelRe=$1
	wmiir ls /client | grep \^0x | while read i ; do
		thisLabel=`wmiir read /client/$i/props`
		if [[ $thisLabel =~ $labelRe ]] ; then
			if [[ $verbose = 1 ]] ; then
				wmii-print-client -v $i
			else
				echo ${i%/}
			fi
		fi
	done
}

# List all wmii clients including their labels and tags
wmii-list() {
	unset GREP_OPTIONS
	wmiir ls /client | grep \^0x | wmii-print-client $1
}

wmii_normcolors='#000000 #c1c48b #81654f'
wmii_focuscolors='#000000 #81654f #000000'
wmii_background='#333333'
wmii_noticecolors='#CCCCCC #660011 #EEEEEE'
wmii_font='drift,-*-fixed-*-*-*-*-9-*-*-*-*-*-*-*'

wmii-highlight() {
	wmiir xwrite "/lbar/$1" "$wmii_noticecolors" "$1"
}

wmii-notice() {
	if [[ $1 = "" ]] ; then
		wmiir xwrite '/rbar/!notice' "$wmii_normcolors" ""
	else
		wmiir xwrite '/rbar/!notice' "$wmii_noticecolors" "$1"
	fi
}

wmii-view-tag() {
	wmiir xwrite /ctl view $1
}

wmii-kill() {
	wmiir xwrite /client/$1/ctl kill
}

wmii-z() {
	wmiir read /tag/sel/index | grep '^~' | grep -v 'xbmc.bin' | awk '{print $2}' | while read i ; do wmiir xwrite /tag/sel/ctl send $i 1 ; done
}
# wmiir xwrite /tag/1/ctl select client 0xc146b3

set -o emacs

# dbus-monitor "path='/im/pidgin/purple/PurpleObject',interface='im.pidgin.purple.PurpleInterface',member='ReceivedChatMsg'"

setopt interactivecomments


# Wireshark isn't affect by scroll wheel
# https://bugs.archlinux.org/task/35348
export GDK_CORE_DEVICE_EVENTS=1

whitenoise() { setsid vlc ~/.jdownloader/downloads/Celestial*.tmp }

ws_fab() { sudo tshark -O xml,http -i lo -f "port 32274" }

# egrep -v '(torrent|guestbook|mediawiki|OPTIONS|POST|HEAD)' access_log | less

MAILDIR=/home/jbalint/mutt_mail/OracleIMAP

oragit() {
	git config user.email jess.balint@oracle.com
}

git-log-graph() {
	git log --pretty=oneline --graph
}

cj-j8() {
	perl -pi.bak -e's/(java version \&quot;)1\.\d/${1}1\.8/g' build.xml
}

alias redshift="redshift -m randr:crtc=DP2"
alias bldec="xbacklight -dec 10 ; xbacklight"
alias blinc="xbacklight -inc 10 ; xbacklight"
alias bl0="xbacklight = 0"
alias bl100="xbacklight = 100"

# http://stackoverflow.com/questions/424071/list-all-the-files-for-a-commit-in-git
alias git-files-changed="git diff-tree --no-commit-id --name-only -r HEAD"

# quickest way to install? :)
alias gradle='/home/jbalint/sw/java-sw/gradle-2.6/bin/gradle'
alias rebar3='/home/jbalint/sw/rebar3/rebar3'
export GRADLE_OPTS=-Dorg.gradle.daemon=true

export SPHINXBUILD=sphinx-build2

export BS_HOME=/home/jbalint/sw/banshee-sympatico
