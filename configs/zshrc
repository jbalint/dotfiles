# -*- mode: sh -*-
autoload -U colors && colors
export PROMPT="%{$fg[green]%}%~%{$fg_bold[blue]%}%% %{$reset_color%}"
unsetopt sharehistory
set -o emacs
ulimit -c unlimited
setopt interactivecomments

export HOSTNAME=$(hostname)

if [[ "$INSIDE_EMACS" = "" ]] ; then
	export RPROMPT="%{$fg[blue]%}$HOSTNAME %F%T%f%{$reset_color%}"
else
	export RPROMPT=""
fi

export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/bin/core_perl
export JAVA5_HOME=~/sw/java-sw/jdk5
export JAVA6_HOME=~/sw/java-sw/jdk6
export JAVA7_HOME=~/sw/java-sw/jdk7
export JAVA8_HOME=~/sw/java-sw/jdk8
export JAVA9_HOME=~/sw/java-sw/jdk9
export JAVA11_HOME=~/sw/java-sw/jdk11
export JAVA17_HOME=~/sw/java-sw/jdk17
export JAVA21_HOME=~/sw/java-sw/jdk21
#export LUA_HOME=~/sw/lua-5.2.2
#export MYSQL_HOME=~/sw/mysql-5.5.30-linux2.6-x86_64
export LD_LIBRARY_PATH=~/sw/yellow-tree:~/lib
export PKG_CONFIG_PATH=~/lib/pkgconfig
# Wireshark doesn't use scroll wheel - https://bugs.archlinux.org/task/35348
export GDK_CORE_DEVICE_EVENTS=1
if which lesspipe.sh >& /dev/null ; then
	LESSOPEN="|lesspipe.sh %s"; export LESSOPEN
fi
export LESS="-r -w -J"
export PAGER=less
export GRADLE_OPTS="-Dbs.svc=gradle -Dorg.gradle.daemon=true"
export SPHINXBUILD=sphinx-build2
export BS_HOME=/home/jbalint/sw/banshee-sympatico
export EDITOR=vim
export LUA_PATH="/home/jbalint/sw/yellow-tree/?.lua;/home/jbalint/sw/lunit/lua/?.lua;/home/jbalint/share/lua/5.2/?.lua;/home/jbalint/share/lua/5.2/?/init.lua;/home/jbalint/lib/share/?.lua;;"
export LUA_CPATH="/home/jbalint/lib/lua/5.2/?.so;/home/jbalint/lib/lib/?.so;/home/jbalint/sw/banshee-sympatico/prototype-code/?.so"
export RUST_BACKTRACE=full
# Needed for IntelliJ to (consistenly) work properly with bspwm
export _JAVA_AWT_WM_NONREPARENTING=1
# Python
export VIRTUAL_ENV_DISABLE_PROMPT=1

if [ "$JAVA_HOME" = "" ] ; then
    export JAVA_HOME=$JAVA17_HOME
fi

export LD_LIBRARY_PATH=~/sw/yellow-tree:~/lib:$JAVA_HOME/jre/lib/amd64/server

export PATH=${PATH}:$HOME/.cargo/bin
if [ "$HOSTNAME" = "tagore" ] ; then
	export PATH=${PATH}:/opt/cuda/bin:/home/jbalint/sw/java-sw/stardog-bin/bin:/home/jbalint/.gem/ruby/2.3.0/bin
	export PATH=${PATH}:$HOME/sw/postgres-12.0b3-jess/bin
	export PATH=${PATH}:$HOME/.cargo/bin
	# # these are all cuda-convnet2 variables (not sure if they are
	# # interpreted the same in other libraries)
	# export CUDA_INSTALL_PATH=/opt/cuda
	# export CUDA_BIN_PATH=/opt/cuda/bin
	# export CUDA_LIB_PATH=/opt/cuda/lib
	# export CUDA_INC_PATH=/opt/cuda/include
	# export CUDA_SDK_PATH=/opt/cuda/samples
	# export PYTHON_INCLUDE_PATH=/usr/include/python2.7
	# export NUMPY_INCLUDE_PATH=/usr/include/python2.7/numpy
	export STARDOG_HOME=/home/jbalint/stardog-home
	export STARDOG_EXT=/home/jbalint/stardog-home/ext_jars
	export PGDATA=/home/jbalint/pg-cluster
	export STARDOG_SERVER_JAVA_ARGS="-Dbs.svc=STARDOG -Xmx2g -Xms2g -XX:MaxDirectMemorySize=1g -Djava.io.tmpdir=$STARDOG_HOME/TMP -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:NativeMemoryTracking=summary -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
fi


for X ( \
	~/bin \
	~/.local/bin \
	~/.toolbox/bin \
        ~/sw/java-sw/stardog-bin \
	$BS_HOME/bin \
	$JAVA_HOME/bin \
	~/.cask/bin ) ; do
	export PATH="$X:$PATH"
done

alias vi=vim
alias rein=". ~/.zshrc"
alias java8="export JAVA_HOME=$JAVA8_HOME ; rein"
alias java9="export JAVA_HOME=$JAVA9_HOME ; rein"
alias java11="export JAVA_HOME=$JAVA11_HOME ; rein"
alias java17="export JAVA_HOME=$JAVA17_HOME ; rein"
alias java21="export JAVA_HOME=$JAVA21_HOME ; rein"
alias edrc="vi ~/.zshrc"
alias reset_inotify="echo 9999 | sudo tee /proc/sys/fs/inotify/max_user_watches"
alias dnsreset="echo 'nameserver 192.168.1.1' | sudo tee /etc/resolv.conf"
alias screenshot="SS_FILE=screenshot_\$(date "+%Y-%m-%d_%H%M%S").png ; sleep 3s; import -window root \$SS_FILE ; echo \$SS_FILE"
alias screenshot_g="screenshot ; gimp \$SS_FILE"
alias facebook="chromium facebook.com"
alias timidity="timidity -iA -R 1"
alias bldec="xbacklight -dec 10 ; xbacklight"
alias blinc="xbacklight -inc 10 ; xbacklight"
alias bl0="xbacklight = 0"
alias bl10="xbacklight = 10"
alias bl100="xbacklight = 100"
alias feh="feh -Z -."
# http://stackoverflow.com/questions/424071/list-all-the-files-for-a-commit-in-git
alias git-files-changed="git diff-tree --no-commit-id --name-only -r"
# Thanks. https://unix.stackexchange.com/a/187256/178680
alias urldecode='sed "s@+@ @g;s@%@\\\\x@g" | xargs -0 printf "%b"'
alias usage='du -Psx * | sort -n'
alias recaf='setsid java -jar ~/sw/java-sw/Recaf/recaf-1.15.10.jar'
alias emm='export $(gpg --decrypt ~/sw/private_code/emm.gpg | grep -v "^#" | xargs)'
alias bspcd='bspc query -M --names | while read i ; do echo ">> Desktops on $i <<" ; bspc query -D --names -m $i ; done'
alias clion="sg jira /home/jbalint/dl/clion-2019.1.4/bin/clion.sh"
alias luke="/home/jbalint/sw/java-sw/lucene-8.3.0/luke/luke.sh"
alias chromium-kill-gpu="ps auxw | grep chromium | grep type=gpu-process | grep -v jxbrowser | awk '{print \$2}' | xargs kill"

ptsproc() { ps auxw | grep pts/`pts` }
pts() {	basename `readlink /proc/self/fd/0` } # same as tty command
xterm_title() { echo "\033]2;$1\007" }
Ts() { tmux new-session -s "$1" }
Tl() { tmux list-sessions }
Tr() { tmux attach-session -t "$1" }
Td() { tmux detach-client -s "$1" }
touchpad_off() { synclient TouchpadOff=1 }
touchpad_on() { synclient TouchpadOff=0 }
git-log-graph() { git log --pretty=oneline --graph }
gstack() { gdb -batch -ex "thread apply all bt full" -p $1 }
mailsync() { notmuch search --format=text0 --output=files tag:deleted | xargs -0 --no-run-if-empty rm && mbsync -a && notmuch new }
sd-graphs() { stardog query execute $1 'select distinct ?g { graph ?g {} } order by ?g' }
sd-g-contents() { stardog query execute $1 "select ?s ?p ?o { graph <$2> { ?s ?p ?o } } order by ?s ?p ?o" }

# Show the top-level dirs in an archive
zdirs() {
	if [[ $1 =~ .tar.gz$ || $1 =~ .tgz$ ]] ; then
		gunzip -c "$1" | tar -tf - | sed 's/\/.*//' | uniq
	elif [[ $1 =~ .tar.bz2$ || $1 =~ .tbz$ ]] ; then
		bunzip2 -c "$1" | tar -tf - | sed 's/\/.*//' | uniq
	elif [[ $1 =~ .zip$ ]] ; then
		unzip -l $1 | \
			egrep -v '(^---|^Archive|(Length\s+Date\s+Time)|         )' | \
			perl -lpe's/\s+\d+\s+\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}\s+(.+?)\/.*$/$1/' | uniq
	else
		echo "Unknown archive type"
	fi
}

yt_pid() {
	#YT_PID=$(ps w | egrep "Xcheck.*lunit" | grep -v grep  | awk "{print \$1}")
	YT_PID=$(ps w | egrep "Xcheck.*yt" | egrep -v "grep|gdb"  | awk "{print \$1}")
	echo $YT_PID
}

yt_jstack() {
	YT_PID=$(yt_pid)
	if [ "$YT_PID" -ne "" ] ; then
		jstack $YT_PID
	else
		echo "None running"
	fi
}

yt_gstack() {
	YT_PID=$(yt_pid)
	if [ "$YT_PID" -ne "" ] ; then
		gstack $YT_PID
	else
		echo "None running"
	fi
}

mouse_invert() { # Invert mouse buttons
	BTNS="1 2 3"
	if [ "$1" = "t" ] ; then
		BTNS="3 2 1"
	fi
	xmodmap -e "pointer = $BTNS"
}

aur_install() { # Install a downloaded AUR package
	cd ~/aur && \
	tar -zxvf ~/dl/$1.tar.gz && \
	cd $1 && \
	makepkg -s && \
	sudo pacman -U ${1}*.pkg.tar.xz
}

grep_gradle() {
    SEARCH=$1
    find . -name '*.gradle' | while read i ; do
	if grep $SEARCH $i > /dev/null ; then
            echo ">>> Found in $i <<<"
            grep $SEARCH $i
        fi
    done
}

# TODO : refactor shared code, but need to quote arguments properly!
grep_bazel() {
    SEARCH=$1
    find . -name 'BUILD.bazel' | while read i ; do
	if grep $SEARCH $i > /dev/null ; then
            echo ">>> Found in $i <<<"
            grep $SEARCH $i
        fi
    done
}

diffdir() {
    (cd $1 ; find . | sort > /tmp/diffdir_a.txt)
    (cd $2 ; find . | sort > /tmp/diffdir_b.txt)
    diff -W 300 -y /tmp/diffdir_a.txt /tmp/diffdir_b.txt | egrep '(<|>)'
}

# Switch wm from desktop mode to laptop
# Monitors:
#   * eDP-1: laptop screen
#   * HDMI-1-1: primary monitor
#   * (?? TBD ??) DP-3: secondary monitor (left-of DP-3)

M_LAPTOP=eDP-1
M_0=HDMI-1-0
M_1=DP-1-3

bspc_laptop() {

    # Turn on the laptop screen
    xrandr --output $M_LAPTOP --auto --right-of $M_0

    # create implicit desktops
    bspc monitor $M_0 -a Desktop
    bspc monitor $M_1 -a Desktop
    CURR_DESKTOP=$(bspc query -D -d focused)
    for i in 0 q ; do bspc desktop $i -m $M_LAPTOP ; done
    for i in `seq 1 9` ; do bspc desktop $i -m $M_LAPTOP ; done
    bspc desktop -f $CURR_DESKTOP

    # TODO: re-focus the prev focused

    # Remove other monitors
    xrandr --output $M_1 --off --output $M_0 --off
    bspc monitor $M_0 -r
    bspc monitor $M_1 -r

    # Remove any implicitly created desktops
    for i in `seq 1 4` ; do bspc desktop Desktop -r ; done

    # Restart polybar
    bspc config -m $M_LAPTOP top_padding 20
    killall polybar ; setsid polybar `hostname`-$M_LAPTOP

    # In case anything got lost, adopt orphaned windows
    bspc wm -o

}

bspc_desktop() {
    # These do not work reliably when combined into one command
    xrandr --output $M_0 --auto --left-of $M_LAPTOP
    xrandr --output $M_1 --auto --left-of $M_0
    # xrandr --fb 5120x1440 --output $M_0 --auto --panning 0x0 --output $M_1 --auto --panning 0x0 --left-of $M_0 --output $M_LAPTOP --off
    # xrandr --output $M_0 --auto --output $M_1 --auto --left-of $M_0 --output $M_LAPTOP --off
    # To disable panning
    # xrandr -s 0

    bspc monitor $M_LAPTOP -a Desktop

    for i in 0 q ; do bspc desktop $i -m $M_1 ; done
    for i in `seq 1 9` ; do bspc desktop $i -m $M_0 ; done

    xrandr --output $M_LAPTOP --off

    bspc monitor $M_LAPTOP -r
    # There could be a few...
    for i in `seq 1 4` ; do bspc desktop Desktop -r ; done

    # Restart polybar
    bspc config -m $M_1 top_padding 0
    bspc config -m $M_0 top_padding 20
    killall polybar ; setsid polybar `hostname`-$M_0

}

ncc() {
    setxkbmap -option ctrl:nocaps
    local DEFT_ID=`xinput list | grep DEFT | grep pointer | grep -v "Consumer Control" | perl -lpe's/.*id=(\d+).*/$1/'`
    xinput set-prop $DEFT_ID 'libinput Scroll Method Enabled' 0 0 1
    xinput set-prop $DEFT_ID 'libinput Button Scrolling Button' 11
    echo 2 | sudo tee -a /sys/module/hid_apple/parameters/fnmode
}

msshfs() {
    sshfs -oport=6701,reconnect,ServerAliveInterval=45,ServerAliveCountMax=2 jessandmorgan.com:/home/jbalint /home/jbalint/tagore_home
    sshfs -oport=6701,reconnect,ServerAliveInterval=45,ServerAliveCountMax=2 jessandmorgan.com:/ /home/jbalint/tagore
    #sshfs -oreconnect,ServerAliveInterval=45,ServerAliveCountMax=2 agelaius:/mnt/red_or_blue red_or_blue
}

# Prevent C-s and C-q from sending term codes (Needed for rtorrent)
stty stop undef
stty start undef

# dbus-monitor "path='/im/pidgin/purple/PurpleObject',interface='im.pidgin.purple.PurpleInterface',member='ReceivedChatMsg'"
# egrep -v '(torrent|guestbook|mediawiki|OPTIONS|POST|HEAD)' access_log | less

# https://wiki.archlinux.org/index.php/SSH_keys#SSH_agents
if ! pgrep -u "$USER" ssh-agent > /dev/null; then
    ssh-agent | grep -v "Agent pid" > "$XDG_RUNTIME_DIR/ssh-agent.env"
fi
if [[ ! "$SSH_AUTH_SOCK" ]]; then
    eval "$(<"$XDG_RUNTIME_DIR/ssh-agent.env")"
fi

################################################
# The following lines were added by compinstall

zstyle ':completion:*' completer _complete _ignored
zstyle :compinstall filename '/home/jbalint/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory autocd extendedglob nomatch
# End of lines configured by zsh-newuser-install

[ -e $HOME/sw/private_code/dotfiles/scripts/private-env.sh ] && source $HOME/sw/private_code/dotfiles/scripts/private-env.sh
